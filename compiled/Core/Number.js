// Generated by CoffeeScript 1.3.3
(function() {
  var DIGITS, Number;

  DIGITS = [['0000000000', '0001111000', '0010001100', '0010001100', '0010001100', '0010001100', '0010001100', '0010001100', '0010001100', '0001111000', '0000000000'], ['0000000000', '0001110000', '0010110000', '0000110000', '0000110000', '0000110000', '0000110000', '0000110000', '0000110000', '0011111100', '0000000000'], ['0000000000', '0001111000', '0010001100', '0010001100', '0000001100', '0000011000', '0000110000', '0001100100', '0011000100', '0011111100', '0000000000'], ['0000000000', '0001111000', '0010001100', '0000001100', '0000001100', '0000111000', '0000001100', '0000001100', '0010001100', '0001111000', '0000000000'], ['0000000000', '0000111000', '0001011000', '0011011000', '0010011000', '0110011000', '0110011000', '0111111110', '0000011000', '0001111110', '0000000000'], ['0000000000', '0011111100', '0010001100', '0010000000', '0010000000', '0011111000', '0000001100', '0000001100', '0010001100', '0001111000', '0000000000'], ['0000000000', '0001111000', '0010000100', '0010000000', '0010000000', '0011111000', '0010001100', '0010001100', '0010001100', '0001111000', '0000000000'], ['0000000000', '0011111100', '0010000110', '0010000110', '0000001100', '0000011000', '0000110000', '0000110000', '0000110000', '0000110000', '0000000000'], ['0000000000', '0001111000', '0010001100', '0010001100', '0010001100', '0001111000', '0010001100', '0010001100', '0010001100', '0001111000', '0000000000'], ['0000000000', '0001111000', '0010001100', '0010001100', '0010001100', '0001111100', '0000001100', '0000001100', '0010001100', '0001111000', '0000000000']];

  Number = (function() {

    function Number(digit, value, context) {
      this.digit = digit;
      this.value = value;
      this.context = context;
      this.render();
    }

    Number.prototype.set = function(value) {
      this.value = value;
      return this.render();
    };

    Number.prototype.clear = function() {
      var i, j, offset, pattern, r, _i, _results;
      this.context.fillStyle = '#000011';
      r = Number.prototype.RESOLUTION;
      offset = Number.prototype.OFFSET * this.digit * r;
      pattern = DIGITS[this.value];
      _results = [];
      for (i = _i = 0; _i < 11; i = ++_i) {
        _results.push((function() {
          var _j, _results1;
          _results1 = [];
          for (j = _j = 0; _j < 10; j = ++_j) {
            _results1.push(this.context.fillRect(j * r + offset, i * r + 5, r - 1, r - 1));
          }
          return _results1;
        }).call(this));
      }
      return _results;
    };

    Number.prototype.render = function() {
      var i, j, offset, pattern, r, _i, _results;
      this.clear();
      this.context.fillStyle = '#cc0000';
      r = Number.prototype.RESOLUTION;
      offset = Number.prototype.OFFSET * this.digit * r;
      pattern = DIGITS[this.value];
      _results = [];
      for (i = _i = 0; _i < 11; i = ++_i) {
        _results.push((function() {
          var _j, _results1;
          _results1 = [];
          for (j = _j = 0; _j < 10; j = ++_j) {
            if (pattern[i][j] === '1') {
              _results1.push(this.context.fillRect(j * r + offset, i * r + 5, r - 1, r - 1));
            } else {
              _results1.push(void 0);
            }
          }
          return _results1;
        }).call(this));
      }
      return _results;
    };

    return Number;

  })();

  Number.prototype.RESOLUTION = 3;

  Number.prototype.OFFSET = 8;

  Number.prototype.MARGIN = 10;

  this.Number = Number;

}).call(this);
