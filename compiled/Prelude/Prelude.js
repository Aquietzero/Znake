// Generated by CoffeeScript 1.3.3
(function() {
  var Prelude;

  Prelude = (function() {

    function Prelude(container, width, height) {
      this.container = container;
      this.width = width;
      this.height = height;
      this.layers = [];
      this.initStage();
      this.initTrack();
      this.status = 'RUNNING';
      this.initEvents();
    }

    Prelude.prototype.initStage = function() {
      this.stage = new Stage(10, this.container, this.width, this.height);
      return this.layers.push(this.stage);
    };

    Prelude.prototype.initTrack = function() {
      this.track = new Track(this.stage, this.container, this.width, this.height);
      this.track.setActions
      return this.layers.push(this.track);
    };

    Prelude.prototype.initEvents = function() {
      var _this = this;
      return document.onkeydown = function(event) {
        switch (event.keyCode) {
          case 38:
            return _this.track.turn('UP');
          case 39:
            return _this.track.turn('RIGHT');
          case 40:
            return _this.track.turn('DOWN');
          case 37:
            return _this.track.turn('LEFT');
          case 32:
            return _this.pause();
        }
      };
    };

    Prelude.prototype.run = function() {
      var update,
        _this = this;
      update = function() {
        var layer, _i, _len, _ref, _results;
        _ref = _this.layers;
        _results = [];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          layer = _ref[_i];
          _results.push(layer.update());
        }
        return _results;
      };
      return this.run_id = setInterval(update, 30);
    };

    Prelude.prototype.stop = function() {
      return clearInterval(this.run_id);
    };

    Prelude.prototype.pause = function() {
      if (this.status === 'RUNNING') {
        this.status = 'STOP';
        return this.stop();
      } else if (this.status === 'STOP') {
        this.status = 'RUNNING';
        return this.run();
      }
    };

    return Prelude;

  })();

  this.Prelude = Prelude;

}).call(this);
