// Generated by CoffeeScript 1.3.3
(function() {
  var Editor,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Editor = (function(_super) {

    __extends(Editor, _super);

    function Editor(grid_size, container, width, height) {
      this.grid_size = grid_size;
      Editor.__super__.constructor.call(this, container, width, height);
      this.renderGrains();
      this.renderGrid();
    }

    Editor.prototype.renderGrid = function() {
      var i, _i, _j, _ref, _ref1, _ref2, _ref3;
      this.context.strokeStyle = '#000';
      this.context.beginPath();
      for (i = _i = 0.5, _ref = this.canvas.width, _ref1 = this.grid_size; 0.5 <= _ref ? _i <= _ref : _i >= _ref; i = _i += _ref1) {
        this.context.moveTo(i, 0);
        this.context.lineTo(i, this.canvas.height);
      }
      for (i = _j = 0.5, _ref2 = this.canvas.height, _ref3 = this.grid_size; 0.5 <= _ref2 ? _j <= _ref2 : _j >= _ref2; i = _j += _ref3) {
        this.context.moveTo(0, i);
        this.context.lineTo(this.canvas.width, i);
      }
      this.context.closePath();
      return this.context.stroke();
    };

    Editor.prototype.renderGrains = function() {
      this.context.fillStyle = '#001';
      return this.context.fillRect(0, 0, this.width, this.height);
    };

    Editor.prototype.update = function() {};

    return Editor;

  })(Layer);

  this.Editor = Editor;

}).call(this);
